var fs = require('fs'),
    path = require('path'),
    http = require('http');

//var app = require('connect')();
var swaggerTools = require('swagger-tools');
var jsyaml = require('js-yaml');

const express = require("express");
const cors = require("cors");

const app = express();
const PORT = process.env.PORT || 8080;

// swaggerRouter configuration
var options = {
  swaggerUi: path.join(__dirname, '/swagger.json'),
  controllers: path.join(__dirname, './controllers'),
  useStubs: process.env.NODE_ENV === 'development' // Conditionally turn on stubs (mock mode)
};

// The Swagger document (require it, build it programmatically, fetch it from a URL, ...)
var spec = fs.readFileSync(path.join(__dirname,'api/swagger.yaml'), 'utf8');
var swaggerDoc = jsyaml.safeLoad(spec);

// Initialize the Swagger middleware
swaggerTools.initializeMiddleware(swaggerDoc, function (middleware) {

  // Interpret Swagger resources and attach metadata to request - must be first in swagger-tools middleware chain
  app.use(middleware.swaggerMetadata());

  // Validate Swagger requests
  app.use(middleware.swaggerValidator());

  // Route validated requests to appropriate controller
  app.use(middleware.swaggerRouter(options));

  // Serve the Swagger documents and Swagger UI
  app.use(middleware.swaggerUi());

  // Start the server
//  http.createServer(app).listen(serverPort, function () {
//  console.log('Your server is listening on port %d (http://localhost:%d)', serverPort, serverPort);
//  console.log('Swagger-ui is available on http://localhost:%d/docs', serverPort);
//  });

});



var corsOptions = {
  origin: "http://localhost:8081"
};

app.use(cors(corsOptions));

// parse requests of content-type - application/json
app.use(express.json());

// parse requests of content-type - application/x-www-form-urlencoded
app.use(express.urlencoded({ extended: true }));

const db = require("./models/index.js");

db.sequelize.sync({ force: false }).then(() => {
  console.log("Drop and re-sync db.");
});

// simple route
app.get("/get", (req, res) => {
  res.json({ message: "Welcome to shotgun application.", methode : req.method});
});

app.post("/game", (req, res) => {
  res.json({ message: "ajouter des donnÃ©es", methode : req.method});
});

require("./routes/shotgun.routes.js")(app);
require("./routes/game.routes.js")(app);

// set port, listen for requests
app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}.`);
});