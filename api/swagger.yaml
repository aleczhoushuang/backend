---
swagger: "2.0"
info:
  description: "shotgunapp\n"
  version: "1.0.0"
  title: "Swagger Shotgun"
  termsOfService: "http://swagger.io/terms/"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
basePath: "/api"
tags:
- name: "shotgun"
  description: "Everything about your Shotguns"
- name: "event"
  description: "Access to the event shotgun"
- name: "user"
  description: "Operations about user"
- name: "game"
  description: "Everything about your games"
schemes:
- "http"
- "https"
paths:
  /shotgun:
    post:
      tags:
      - "shotgun"
      summary: "Add a new shotgun"
      operationId: "createshotgun"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "add the shotgun to the list"
        required: true
        schema:
          $ref: "#/definitions/Shotgun"
      responses:
        "405":
          description: "Invalid input"
      x-swagger-router-controller: "shotgun.controller"
  /shotgun/{nom_shotgun}:
    get:
      tags:
      - "shotgun"
      summary: "Find shotgun by nom_shotgun"
      description: "Returns a single shotgun"
      operationId: "findshotgun"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "nom_shotgun"
        in: "path"
        description: "nom of shotgun"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Shotgun"
        "400":
          description: "Invalid nom supplied"
        "404":
          description: "Shotgun not found"
      x-swagger-router-controller: "shotgun.controller"
  /shotgun/{id}:
    get:
      tags:
      - "shotgun"
      summary: "Find shotgun by id"
      description: "Returns a single shotgun"
      operationId: "findOneshotgun"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id"
        in: "path"
        description: "id of shotgun"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Shotgun"
        "400":
          description: "Invalid id supplied"
        "404":
          description: "Shotgun not found"
      x-swagger-router-controller: "shotgun.controller"
    put:
      tags:
      - "shotgun"
      summary: "Update an existing shotgun"
      operationId: "updateshotgun"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id"
        in: "path"
        description: "id of shotgun"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "update the shotgun to the list"
        required: true
        schema:
          $ref: "#/definitions/Shotgun"
      responses:
        "400":
          description: "Invalid id supplied"
        "404":
          description: "Shotgun not found"
        "405":
          description: "Validation exception"
      x-swagger-router-controller: "shotgun.controller"
    delete:
      tags:
      - "shotgun"
      summary: "Deletes a shotgun"
      operationId: "deleteshotgun"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id"
        in: "path"
        description: "id shotgun to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid id supplied"
        "404":
          description: "Shotgun not found"
      x-swagger-router-controller: "shotgun.controller"
  /shotgun/shotlist/{username}:
    get:
      tags:
      - "shotgun"
      summary: "Find shotgun by username"
      description: "Returns list of single shotgun"
      operationId: "findListshotgun"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "username"
        in: "path"
        description: "username of shotgun"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Shotgun"
        "400":
          description: "Invalid username supplied"
        "404":
          description: "Shotgun List not found"
      x-swagger-router-controller: "shotgun.controller"
  /event:
    post:
      tags:
      - "event"
      summary: "Do a shotgun"
      operationId: "createevent"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "add your own shotgun of an event to the list"
        required: true
        schema:
          $ref: "#/definitions/Event"
      responses:
        "405":
          description: "Invalid input"
      x-swagger-router-controller: "Event"
  /event/{id}:
    get:
      tags:
      - "event"
      summary: "Find all the shotgun by id"
      description: "Returns the time of each shotgun with the same id"
      operationId: "findOneevent"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id"
        in: "path"
        description: "id of shotgun"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Event"
        "400":
          description: "Invalid cle supplied"
        "404":
          description: "Shotgun not found"
      x-swagger-router-controller: "Event"
    put:
      tags:
      - "event"
      summary: "add something to an existing event"
      operationId: "updateevent"
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - name: id
        in: path
        description: id of event
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: update the event to the list
        required: true
        schema:
          $ref: '#/definitions/Event'
      responses:
        400:
          description: Invalid id supplied
        404:
          description: Shotgun not found
        405:
          description: Validation exception
    delete:
      tags:
      - "event"
      summary: "Delete shotgun of an event"
      description: "This can only be done by the logged in user."
      operationId: "deleteevent"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id"
        in: "path"
        description: "The id that needs to be deleted"
        required: true
        type: integer
        format: int64
      responses:
        "400":
          description: "Invalid id supplied"
        "404":
          description: "Event not found"
      x-swagger-router-controller: "Event"
  /user:
    post:
      tags:
      - "user"
      summary: "Create user"
      description: "This can only be done by the logged in user."
      operationId: "createuser"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        default:
          description: "successful operation"
      x-swagger-router-controller: "User"
  /user/{username}:
    get:
      tags:
      - "user"
      summary: "Get user by user name"
      operationId: "findOneuser"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "username"
        in: "path"
        description: "The name that needs to be fetched."
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        "400":
          description: "Invalid username supplied"
        "404":
          description: "User not found"
      x-swagger-router-controller: "User"
    put:
      tags:
      - "user"
      summary: "Updated user"
      description: "This can only be done by the logged in user."
      operationId: "updateuser"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "username"
        in: "path"
        description: "name that need to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "400":
          description: "Invalid user supplied"
        "404":
          description: "User not found"
      x-swagger-router-controller: "User"
    delete:
      tags:
      - "user"
      summary: "Delete user"
      description: "This can only be done by the logged in user."
      operationId: "deleteuser"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "username"
        in: "path"
        description: "The name that needs to be deleted"
        required: true
        type: "string"
      responses:
        "400":
          description: "Invalid username supplied"
        "404":
          description: "User not found"
      x-swagger-router-controller: "User"
  /game:
    post:
      tags:
      - "game"
      summary: "Add a new game"
      operationId: "creategame"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Game object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Game"
      responses:
        "200":
          description: "succesfull operation"
        "405":
          description: "Invalid input"
      x-swagger-router-controller: "Game"
  /game/{id}:
    get:
      tags:
      - "game"
      summary: "Get game by id"
      operationId: "findOnegame"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id"
        in: "path"
        description: "The game that needs to be fetched."
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Game"
        "400":
          description: "Invalid id supplied"
        "404":
          description: "Game not found"
      x-swagger-router-controller: "Game"
    put:
      tags:
      - "game"
      summary: "Updated game"
      description: "This can only be done by the logged in user."
      operationId: "updategame"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id"
        in: "path"
        description: "game that need to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated date_go object"
        required: true
        schema:
          $ref: "#/definitions/Game"
      responses:
        "400":
          description: "Invalid game_id supplied"
        "404":
          description: "Game not found"
      x-swagger-router-controller: "Game"
    delete:
      tags:
      - "game"
      summary: "Delete game"
      description: "This can only be done by the logged in user."
      operationId: "deletegame"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id"
        in: "path"
        description: "The game id that needs to be deleted"
        required: true
        type: "string"
      responses:
        "400":
          description: "Invalid id supplied"
        "404":
          description: "game not found"
      x-swagger-router-controller: "Game"
definitions:
  User:
    type: "object"
    properties:
      username:
        type: "string"
      password:
        type: "string"
      fullname:
        type: "string"
      photo:
        type: "string"
      bio:
        type: "string"
      email:
        type: 'string'
      age:
        type: 'integer'
        format: 'int64'
      telephone:
        type: 'integer'
        format: 'int64'
      genre:
        type: 'string'
      custom:
        type: 'string'
    xml:
      name: "User"
    example:
      username: "username"
      password: "1234"
      fullname: "fullname"
      photo: "photo"
      bio: "bio"    
      email: email,
      age: 18,
      telephone: 0695954346,
      genre: M,
      custom: custom
  Shotgun:
    type: "object"
    required:
    - "nom_shotgun"
    properties:
      id:
        type: "integer"
        format: "int64"
      nom_shotgun:
        type: "string"
      date_shotgun:
        type: "string"
        format: "date"
      nb_place:
        type: "integer"
        format: "int64"
      photo_shotgun:
        type: "string"   
      email:
        type: 'string'
      age:
        type: 'integer'
        format: 'int64'
      telephone:
        type: 'integer'
        format: 'int64'
      genre:
        type: 'string'
      custom:
        type: 'string'
    xml:
      name: "Shotgun"
    example:
      id: 154690
      nom_shotgun: "weski"
      date_shotgun: "20/10/2022"
      nb_place: 2
      photo_shotgun: "photo"
      duree_shotgun: 10
      email: email,
      age: 18,
      telephone: 0695954346,
      genre: M,
      custom: custom
  Event:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      admin:
        type: "boolean"
      temps_shot:
        type: "integer"
        format: "int64"
      email:
        type: 'string'
      age:
        type: 'integer'
        format: 'int64'
      telephone:
        type: 'integer'
        format: 'int64'
      genre:
        type: 'string'
      custom:
        type: 'string'
    xml:
      name: "Event"
    example:
      id: 100000
      username: "username"
      admin: "true"
      temps_shot: 6
      email: email,
      age: 18,
      telephone: 0695954346,
      genre: M,
      custom: custom
      
  Game:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      admin:
        type: "boolean"
      temps_jeu:
        type: "integer"
        format: "int64"
      date_go:
        type: "string"
        format: "date"
    xml:
      name: "Game"
    example:
      id: 100650
      username: "username"
      admin: "true"
      temps_jeu: 6
      date_go: "date_go"
      
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
